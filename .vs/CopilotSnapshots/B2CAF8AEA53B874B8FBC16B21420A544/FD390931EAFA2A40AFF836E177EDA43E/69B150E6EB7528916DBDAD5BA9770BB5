/**
 * dynamic-news.js
 * - ニュース一覧/詳細の動的描画（強化版）
 * - XSS対策のための escapeHTML を使用
 */

document.addEventListener('DOMContentLoaded', () => {
  if (document.getElementById('news-list-container')) {
    loadDynamicNewsList();
  }
  if (document.getElementById('news-article-container')) {
    loadDynamicNewsDetail();
  }
});

function escapeHTML(str) {
  if (typeof str !== 'string') return '';
  return str
    .replace(/&/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;')
    .replace(/'/g, '&#39;');
}

// --- ニュース一覧ページ（アクティビティに合わせて強化） ---
async function loadDynamicNewsList(){
  const container = document.getElementById('news-list-container');
  if (!container) return;

  const newsPaginationContainer = document.getElementById('news-pagination-container');
  const noNewsResultsDiv = document.getElementById('no-news-results');

  const NEWS_ITEMS_PER_PAGE = 6;
  let currentPage = 1;
  let allNews = [];
  let settingsCache = null;

  const formatDate = (d) => new Date(d).toLocaleDateString('ja-JP', { year:'numeric', month:'long', day:'numeric' });

  const renderNewsItem = (news) => {
    const summaryPlain = (news.content || '').replace(/<[^>]+>/g,'');
    const summary = summaryPlain.length>120 ? summaryPlain.substring(0,120) + '…' : summaryPlain;
    const detailUrl = `news-detail-placeholder.html?id=${news.id}`;
    const unitBadge = news.unit ? `<span class="badge badge--unit mr-2">${escapeHTML(news.unit)}</span>` : '';
    const catBadge = news.category ? `<span class="badge badge--category">${escapeHTML(news.category)}</span>` : '';
    const tags = Array.isArray(news.tags) ? news.tags : [];
    const tagHtml = tags.slice(0,6).map(t=>`<span class="badge badge--tag">#${escapeHTML(t)}</span>`).join('');
    const img = (Array.isArray(news.image_urls) && news.image_urls[0]) ? news.image_urls[0] : `https://placehold.co/720x405/3B82F6/FFFFFF?text=${encodeURIComponent(news.category||'NEWS')}`;
    return `
      <article class="bg-white rounded-xl shadow-lg overflow-hidden card-hover-effect flex flex-col sm:flex-row gap-6">
        <div class="sm:w-2/5">
          <a href="${detailUrl}" class="block"><img src="${img}" alt="${escapeHTML(news.title||'')}" class="w-full h-40 sm:h-full object-cover" loading="lazy"></a>
        </div>
        <div class="sm:w-3/5 p-6 sm:pl-0">
          <div class="flex items-center justify-between mb-2">
            <span>${unitBadge}${catBadge}</span>
            <p class="text-xs text-gray-500">${formatDate(news.created_at)}</p>
          </div>
          <h3 class="text-xl font-semibold text-gray-800 mb-2 line-clamp-2"><a href="${detailUrl}" class="hover:text-green-700 transition-colors duration-300">${escapeHTML(news.title||'')}</a></h3>
          <p class="text-gray-600 leading-relaxed text-sm line-clamp-3">${escapeHTML(summary)}</p>
          ${tagHtml ? `<div class="flex flex-wrap gap-2 mt-3">${tagHtml}</div>` : ''}
          <div class="mt-3"><a href="${detailUrl}" class="text-sm text-green-600 hover:text-green-800 font-medium transition-colors duration-300">続きを読む →</a></div>
        </div>
      </article>`;
  };

  const renderPagination = (total, page) => {
    if (!newsPaginationContainer) return;
    const totalPages = Math.ceil(total / NEWS_ITEMS_PER_PAGE);
    if (totalPages <= 1) { newsPaginationContainer.innerHTML = ''; return; }
    let html = '<ul class="inline-flex items-center -space-x-px shadow-sm rounded-md">';
    html += `<li><button data-page="${page-1}" aria-label="前のページへ" class="news-pagination-button pagination-button ${page===1?'pagination-disabled':''}"><span class="sr-only">前へ</span><svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z" clip-rule="evenodd"></path></svg></button></li>`;
    for (let i=1;i<=totalPages;i++) html += `<li><button data-page="${i}" aria-label="${i}ページ目" class="news-pagination-button pagination-button ${i===page?'pagination-active':''}">${i}</button></li>`;
    html += `<li><button data-page="${page+1}" aria-label="次のページへ" class="news-pagination-button pagination-button ${page===totalPages?'pagination-disabled':''}"><span class="sr-only">次へ</span><svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20"><path fill-rule="evenodd" d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z" clip-rule="evenodd"></path></svg></button></li>`;
    html += '</ul>';
    newsPaginationContainer.innerHTML = html;
    newsPaginationContainer.querySelectorAll('.news-pagination-button').forEach(btn=>{
      btn.addEventListener('click',(e)=>{
        const pageNum = parseInt(e.currentTarget.dataset.page,10);
        const totalPages2 = Math.ceil(allNews.length / NEWS_ITEMS_PER_PAGE);
        if (pageNum && pageNum!==currentPage && pageNum>0 && pageNum<=totalPages2){ currentPage=pageNum; displayNewsItems(allNews); container.scrollIntoView({behavior:'smooth'}); }
      });
    });
  };

  const displayNewsItems = (arr) => {
    container.innerHTML = '';
    if (!arr || arr.length===0){ if (noNewsResultsDiv) noNewsResultsDiv.classList.remove('hidden'); if (newsPaginationContainer) newsPaginationContainer.innerHTML=''; return; }
    if (noNewsResultsDiv) noNewsResultsDiv.classList.add('hidden');
    const startIndex = (currentPage-1)*NEWS_ITEMS_PER_PAGE;
    const items = arr.slice(startIndex, startIndex+NEWS_ITEMS_PER_PAGE);
    container.innerHTML = items.map(renderNewsItem).join('');
    renderPagination(arr.length, currentPage);
  };

  const renderSkeletons = (n=6) => {
    const cards=[];
    for(let i=0;i<n;i++){
      cards.push(`<article class="bg-white rounded-xl shadow-lg overflow-hidden"><div class="skeleton skeleton-thumb"></div><div class="p-6"><div class="skeleton skeleton-text" style="width:35%"></div><div class="skeleton skeleton-text" style="width:90%"></div><div class="skeleton skeleton-text" style="width:80%"></div></div></article>`);
    }
    container.innerHTML = cards.join('');
  };

  const readQuery = () => { const sp = new URLSearchParams(location.search); return { q: sp.get('q')||'', category: sp.get('category')||'all', unit: sp.get('unit')||'', tags_any: (sp.get('tags_any')||'').split(',').filter(Boolean), ym: sp.get('ym')||'' }; };
  const writeQuery = (state) => { const sp = new URLSearchParams(); if (state.q) sp.set('q', state.q); if (state.category && state.category!=='all') sp.set('category', state.category); if (state.unit) sp.set('unit', state.unit); if (state.tags_any && state.tags_any.length) sp.set('tags_any', state.tags_any.join(',')); if (state.ym) sp.set('ym', state.ym); history.replaceState(null,'',`${location.pathname}?${sp.toString()}`); };

  const loadSettings = async () => {
    try {
      const r = await fetch('/api/settings/all'); if (!r.ok) return; const rows = await r.json();
      settingsCache = rows.reduce((acc, it) => (acc[it.key]=it.value, acc), {});
      const units = JSON.parse(settingsCache.units_json || '[]');
      const unitSel = document.getElementById('news-unit-filter'); if (unitSel) unitSel.innerHTML = '<option value="">すべての隊</option>' + (Array.isArray(units)?units.map(u=>`<option value="${u.slug}">${u.label||u.slug}</option>`).join(''):'');
      const tags  = JSON.parse(settingsCache.news_tags_json || '[]');
      const tagSel= document.getElementById('news-tags-filter'); if (tagSel) tagSel.innerHTML = (Array.isArray(tags)?tags.map(t=>`<option value="${t.slug}">${t.label||t.slug}</option>`).join(''):'');
    } catch {}
  };

  try {
    renderSkeletons();
    await loadSettings();
    const qs = location.search || '';
    const response = await fetch(`/api/news${qs}`);
    if (!response.ok) throw new Error('Network response was not ok');
    allNews = await response.json();
    const q = readQuery();
    // UIへ反映
    const catSel = document.getElementById('news-category-filter');
    const unitSel = document.getElementById('news-unit-filter');
    const tagSel  = document.getElementById('news-tags-filter');
    const monthInp= document.getElementById('news-date-filter');
    const searchInp=document.getElementById('news-search');
    if (catSel && q.category) catSel.value = q.category;
    if (unitSel && q.unit) unitSel.value = q.unit;
    if (Array.isArray(q.tags_any) && tagSel) Array.from(tagSel.options).forEach(o=>o.selected = q.tags_any.includes(o.value));
    if (q.ym && monthInp) monthInp.value = q.ym;
    if (q.q && searchInp) searchInp.value = q.q;
    displayNewsItems(allNews);
  } catch (err) {
    console.error('Failed to fetch news:', err);
    container.innerHTML = '<p class="text-center text-red-500">お知らせの読み込みに失敗しました。</p>';
  }

  // フィルタ適用
  const btn = document.getElementById('news-filter-button');
  const catSel = document.getElementById('news-category-filter');
  const monthInp = document.getElementById('news-date-filter');
  const unitSel = document.getElementById('news-unit-filter');
  const tagSel = document.getElementById('news-tags-filter');
  const searchInp = document.getElementById('news-search');
  const btnText = document.getElementById('filter-button-text');
  const spinner = document.getElementById('filter-loading-spinner');
  if (btn) btn.addEventListener('click', ()=>{
    try {
      spinner?.classList?.remove('hidden'); if (btnText) btnText.textContent = '絞り込み中...';
      const cat  = (catSel?.value || 'all').trim();
      const ym   = (monthInp?.value || '').trim();
      const unit = (unitSel?.value || '').trim().toLowerCase();
      const q    = (searchInp?.value || '').trim().toLowerCase();
      const tags = tagSel ? Array.from(tagSel.options).filter(o=>o.selected).map(o=>o.value) : [];
      currentPage = 1;
      const filtered = allNews.filter(n => {
        let ok = true;
        if (cat && cat !== 'all') ok = ok && String(n.category||'') === cat;
        if (unit) ok = ok && String(n.unit||'').toLowerCase() === unit;
        if (q) { const hay = `${(n.title||'')} ${(n.category||'')} ${(n.unit||'')} ${(Array.isArray(n.tags)?n.tags.join(' '):'')} ${(n.content||'').replace(/<[^>]+>/g,'')}`.toLowerCase(); ok = ok && hay.includes(q); }
        if (tags && tags.length) { const set = new Set(Array.isArray(n.tags)?n.tags:[]); ok = ok && tags.some(t=>set.has(t)); }
        if (ym) { const d=new Date(n.created_at); const y=d.getFullYear(); const m=String(d.getMonth()+1).padStart(2,'0'); ok = ok && `${y}-${m}`===ym; }
        return ok;
      });
      writeQuery({ q, category: cat, unit, tags_any: tags, ym });
      displayNewsItems(filtered);
    } finally {
      spinner?.classList?.add('hidden'); if (btnText) btnText.textContent = '絞り込む';
    }
  });
}

// --- ニュース詳細ページ（アクティビティに合わせて強化） ---
async function loadDynamicNewsDetail() {
  const articleContainer = document.getElementById('news-article-container');
  if (!articleContainer) return;
  const urlParams = new URLSearchParams(window.location.search);
  const newsId = urlParams.get('id');
  if (!newsId) return;

  const pageTitleElement = document.getElementById('page-title-news');
  const crumbTitle = document.getElementById('news-title-breadcrumb');
  const articleNotFoundDiv = document.getElementById('news-article-not-found');

  const formatDate = (dateString) => new Date(dateString).toLocaleDateString('ja-JP', { year:'numeric', month:'long', day:'numeric' });

  // Google Drive 画像埋め込み対応
  const toEmbed = (u) => {
    try {
      const url = new URL(u, location.origin);
      if (url.hostname.includes('drive.google.com')) {
        const m = url.pathname.match(/\/file\/d\/([^/]+)\/view/);
        if (m) return `https://drive.google.com/uc?export=view&id=${m[1]}`;
        const id = url.searchParams.get('id');
        if (id) return `https://drive.google.com/uc?export=view&id=${id}`;
      }
      return url.href;
    } catch { return u; }
  };

  // 一覧カード（関連記事用）
  const renderRelatedCard = (item) => {
    const summaryPlain = String(item.content||'').replace(/<[^>]+>/g,'').trim();
    const summary = summaryPlain.length>140 ? summaryPlain.slice(0,140)+'…' : summaryPlain;
    const img = (Array.isArray(item.image_urls) && item.image_urls[0]) ? toEmbed(item.image_urls[0]) : `https://placehold.co/720x405/3B82F6/FFFFFF?text=${encodeURIComponent(item.category||'NEWS')}`;
    const dateLabel = item.created_at ? formatDate(item.created_at) : '';
    const url = `news-detail-placeholder.html?id=${item.id}`;
    const unitBadge = item.unit ? `<span class="badge badge--unit mr-2">${escapeHTML(item.unit)}</span>` : '';
    const catBadge  = item.category ? `<span class="badge badge--category">${escapeHTML(item.category)}</span>` : '';
    return `
      <div class="bg-white rounded-xl shadow-xl overflow-hidden card-hover-effect group">
        <div class="relative">
          <img src="${img}" alt="${escapeHTML(item.title||'')}" class="w-full h-56 object-cover transition-transform duration-500 group-hover:scale-110" loading="lazy">
          <div class="absolute inset-0 bg-black/20 group-hover:bg-black/10 transition-colors duration-300"></div>
        </div>
        <div class="p-6">
          <div class="flex items-center justify-between mb-2">
            <div class="flex items-center gap-2 flex-wrap">${unitBadge}${catBadge}</div>
            <p class="text-sm text-gray-500">${dateLabel}</p>
          </div>
          <h3 class="text-xl font-semibold mb-2 line-clamp-2"><a href="${url}" class="hover:text-green-700 transition-colors">${escapeHTML(item.title||'')}</a></h3>
          <p class="text-gray-700 mb-3 leading-relaxed line-clamp-3">${escapeHTML(summary)}</p>
          <a href="${url}" class="inline-block text-green-600 hover:text-green-800 font-semibold transition-colors duration-300 group" aria-label="続きを読む"><span class="transition-transform duration-300 inline-block group-hover:translate-x-1">&rarr;</span></a>
        </div>
      </div>`;
  };

  try {
    articleContainer.innerHTML = '<div class="bg-white p-6 rounded-xl shadow-lg"><div class="skeleton skeleton-text" style="width:30%"></div><div class="skeleton skeleton-text" style="width:90%"></div><div class="skeleton skeleton-text" style="width:80%"></div></div>';
    const response = await fetch(`/api/news/${encodeURIComponent(newsId)}`);
    if (!response.ok) throw new Error('Network response was not ok');
    const news = await response.json();
    if (!news || !news.id) throw new Error('Not found');

    if (pageTitleElement) pageTitleElement.textContent = news.title || '';
    if (crumbTitle) crumbTitle.textContent = news.title || '';

    const tags = Array.isArray(news.tags) ? news.tags : [];
    const tagBadges = tags.slice(0, 12).map(t=>`<span class="badge badge--tag mr-2 mb-2">#${escapeHTML(t)}</span>`).join('');
    const unitBadge = news.unit ? `<span class="badge badge--unit mr-2">${escapeHTML(news.unit)}</span>` : '';
    const catBadge  = news.category ? `<span class="badge badge--category">${escapeHTML(news.category)}</span>` : '';

    // 画像
    const imgs = Array.isArray(news.image_urls) ? news.image_urls : [];
    const hero = imgs[0] ? `<div class="mb-4"><img src="${toEmbed(imgs[0])}" alt="${escapeHTML(news.title||'')}" class="w-full h-auto rounded-lg"></div>` : '';
    const gallery = imgs.length>1 ? `<div class="grid grid-cols-3 gap-3 mt-4" id="news-gallery">${imgs.slice(1,7).map((u,i)=>`<img src="${toEmbed(u)}" alt="gallery ${i+1}" class="rounded-md cursor-zoom-in gallery-image-hover" data-full="${toEmbed(u)}">`).join('')}</div>` : '';

    articleContainer.innerHTML = `
      <article class="bg-white p-6 rounded-xl shadow-lg">
        <div class="flex items-center justify-between mb-3">
          <div class="flex items

